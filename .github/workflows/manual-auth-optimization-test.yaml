name: Manual Auth Optimization Test
on:
  workflow_dispatch:
    inputs:
      test_scope:
        description: 'Test scope'
        required: true
        default: 'full'
        type: choice
        options:
        - 'basic'
        - 'auth'
        - 'full'

jobs:
  test-basic-functionality:
    if: ${{ github.event.inputs.test_scope == 'basic' || github.event.inputs.test_scope == 'full' }}
    runs-on: ubuntu-latest
    services:
      registry:
        image: ghcr.io/oras-project/registry:latest
        ports:
          - 5000:5000
        env:
          REGISTRY_STORAGE_DELETE_ENABLED: "true"
    steps:
      - uses: actions/checkout@v4
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          # this might remove tools that are actually needed,
          # if set to "true" but frees about 6 GB
          tool-cache: false
          # all of these default to true, but feel free to set to
          # "false" if necessary for your workflow
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap: true
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - name: Test Oras Python
        env:
          registry_host: localhost
          registry_port: ${{ job.services.registry.ports[5000] }}
          REGISTRY_STORAGE_DELETE_ENABLED: "true"
        run: |
          make install
          make test

  test-auth-functionality:
    if: ${{ github.event.inputs.test_scope == 'auth' || github.event.inputs.test_scope == 'full' }}
    runs-on: ubuntu-latest
    container: ghcr.io/oras-project/registry:latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Python
        run: |
           apk update && apk add python3 make apache2-utils bash
           wget https://bootstrap.pypa.io/get-pip.py
           python3 get-pip.py
           rm get-pip.py
           pip install --upgrade pip setuptools
           make install

      - name: Test Oras Python with Auth
        env:
          registry_host: localhost
          registry_port: 5000
          with_auth: true
          REGISTRY_AUTH: "{htpasswd: {realm: localhost, path: /etc/docker/registry/auth.htpasswd}}"
          REGISTRY_HTTP_TLS_CERTIFICATE: "/etc/docker/registry/server.cert"
          REGISTRY_HTTP_TLS_KEY: "/etc/docker/registry/server.key"
          REGISTRY_STORAGE_DELETE_ENABLED: "true"
        run: |
           htpasswd -cB -b auth.htpasswd myuser mypass
           cp auth.htpasswd /etc/docker/registry/auth.htpasswd
           apk add openssl
           openssl req -newkey rsa:4096 -nodes -sha256 -keyout /etc/docker/registry/server.key -x509 -days 365 -subj "/C=IT/ST=Lombardy/L=Milan/O=Acme Org/OU=IT Department/CN=example.com" -out /etc/docker/registry/server.cert
           registry serve /etc/docker/registry/config.yml & sleep 5
           echo $PWD && ls $PWD && make test

  test-summary:
    if: always()
    needs: [test-basic-functionality, test-auth-functionality]
    runs-on: ubuntu-latest
    steps:
      - name: Test Results Summary
        run: |
          echo "üéØ AUTH OPTIMIZATION TEST RESULTS"
          echo "=================================="
          echo ""
          echo "Basic Functionality: ${{ needs.test-basic-functionality.result }}"
          echo "Auth Functionality: ${{ needs.test-auth-functionality.result }}"
          echo ""

          if [[ "${{ needs.test-basic-functionality.result }}" == "success" ]] &&
             [[ "${{ needs.test-auth-functionality.result }}" == "success" ]]; then
            echo "‚úÖ AUTH OPTIMIZATION READY FOR PR!"
            echo ""
            echo "üöÄ All tests passed - ready to merge to upstream!"
          else
            echo "‚ùå SOME TESTS FAILED"
            echo ""
            echo "‚ùó Issues found that need to be fixed before PR"
            echo "üîß Please fix the issues and run the workflow again"
            exit 1
          fi
